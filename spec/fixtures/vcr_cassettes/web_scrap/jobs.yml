---
http_interactions:
- request:
    method: get
    uri: https://programathor.com.br/jobs/page/1
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Cowboy
      Date:
      - Tue, 31 Jul 2018 12:24:09 GMT
      Connection:
      - keep-alive
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - text/html; charset=utf-8
      Vary:
      - Accept-Encoding
      Etag:
      - W/"502f7ac9dbd4096ff16bf71d04339ddf"
      Cache-Control:
      - max-age=0, private, must-revalidate
      Set-Cookie:
      - _ProgramaThor_session=c2tZeEExa2VxV1BuUVlFUHMzTGlTSjU1cFFqRU93bVc1RlYwTkYzZEsyMXc2V28rVlVDMlhocU4vY2dLTnludExMbzkxckZodG1qR0N2RU5tdlRhMXpBc0l1aVBTUGJnY2VHWUs3YTlpWkh5M2hsMDhQbFRyMGMxeVN2VDY0d2lnQlhXM1FmM2FVTi80ZUdYeHFXS2pBPT0tLUU3V2xqRXh3bGVPNlEvUzhHN2JxT3c9PQ%3D%3D--5fc90488b58941905882226d6769fcdc332a9a9e;
        path=/; secure; HttpOnly
      - utm=%7B%22utm_source%22%3Anull%2C%22utm_campaign%22%3Anull%7D; path=/; max-age=2592000;
        secure
      X-Request-Id:
      - c32f1f14-af95-4558-824a-0ad036f0bce6
      X-Runtime:
      - '0.291184'
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains
      Transfer-Encoding:
      - chunked
      Via:
      - 1.1 vegur
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 31 Jul 2018 12:24:10 GMT
- request:
    method: get
    uri: https://programathor.com.br/jobs/2747-programador-laravel-remoto
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Cowboy
      Date:
      - Tue, 31 Jul 2018 12:24:10 GMT
      Connection:
      - keep-alive
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - text/html; charset=utf-8
      Vary:
      - Accept-Encoding
      Etag:
      - W/"9ac44c388a1729e10aca4aade0470186"
      Cache-Control:
      - max-age=0, private, must-revalidate
      Set-Cookie:
      - _ProgramaThor_session=VytyYWkvWW1xR1lQeGVpRHU0aEQ4TlRBa1NSUGRvRzlVSmh5YXdyMGpYaFlHdFRGeXlESWx2eXo5S0dpVGlZRFVGUXM2NlltcmI5RnpNdkNOWkxMMmpzWTBlSlRFVVVqSlFMKzI4bkVWR01qRUdqY0l2OFFoRk9MVWdOUG1YaGlBSFdJSTRYanhuejZlOVpQSEdLN0tBPT0tLVU2aU1PU3ZTU1UrY0NpdUtjZDdJZ1E9PQ%3D%3D--0d14142ce68b95a0d56e8cf6c6faf16b0a259069;
        path=/; secure; HttpOnly
      - utm=%7B%22utm_source%22%3Anull%2C%22utm_campaign%22%3Anull%7D; path=/; max-age=2592000;
        secure
      X-Request-Id:
      - 22be8acf-380e-4326-a3b5-bdea4c435cb3
      X-Runtime:
      - '0.095973'
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains
      Transfer-Encoding:
      - chunked
      Via:
      - 1.1 vegur
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 31 Jul 2018 12:24:11 GMT
- request:
    method: get
    uri: https://programathor.com.br/jobs/2739-desenvolvedor-ruby-senior-e-especialista-5-vagas
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Cowboy
      Date:
      - Tue, 31 Jul 2018 12:24:11 GMT
      Connection:
      - keep-alive
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - text/html; charset=utf-8
      Vary:
      - Accept-Encoding
      Etag:
      - W/"2280fdfb8775a652e2c45f8479f43916"
      Cache-Control:
      - max-age=0, private, must-revalidate
      Set-Cookie:
      - _ProgramaThor_session=Ry80aVhFa24vN25TWm5Gcyt3UU5hQ3o0OFE4WTZ1em9tL2lGbmtpb05HMGl0MHVCNk5PRFIwN3BTR1JFQUM4dCttUHZJT1IrSkZycUdpUWVqZm54dWJMTHA1L05QK0Y2ZXh5TkRueDlZNXBRSEx2cnpmTWNmN1BCa0RiYlgwcjhSK2RQM0JQSWthMFhKaG1PY3BHTUFRPT0tLXRqc25DaFQvRGhkMlhuWGo0WFlPMmc9PQ%3D%3D--1f356b67b445a7cb5cf6115e4c0df2ea489f250a;
        path=/; secure; HttpOnly
      - utm=%7B%22utm_source%22%3Anull%2C%22utm_campaign%22%3Anull%7D; path=/; max-age=2592000;
        secure
      X-Request-Id:
      - 3580f7ed-ff16-4d56-badb-2f9af75eae49
      X-Runtime:
      - '0.100938'
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains
      Transfer-Encoding:
      - chunked
      Via:
      - 1.1 vegur
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 31 Jul 2018 12:24:11 GMT
- request:
    method: get
    uri: https://programathor.com.br/jobs/2766-desenvolvedor-a-c-net
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Cowboy
      Date:
      - Tue, 31 Jul 2018 12:24:11 GMT
      Connection:
      - keep-alive
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - text/html; charset=utf-8
      Vary:
      - Accept-Encoding
      Etag:
      - W/"29cd8bdef3d032158daa91e3b47d42bb"
      Cache-Control:
      - max-age=0, private, must-revalidate
      Set-Cookie:
      - _ProgramaThor_session=OWNDb285NWlEU05zSjQyMWxHbmVoOWR1NGw5S0lib0dvTWFtZ3lXdjVnbExzbkhwUmdaQXd5Y3krR2lUZm1OeEpCVlc1UkprQTYrWnQzRzd3cGtKdnd5YkJpZXc0Nzg2N3hXUnpDUE4xZDlVU3ZrSXYwQ0VwR2lkVWdkVzBsVkZ0b0N2QU5qNEliM1JvZ3dxWlhWZHlRPT0tLTB2ay9jeXR2OExDMVNiSU53TzZRQWc9PQ%3D%3D--49895e3af3b7a3688a63b5e5cb1d33e9db2ebb98;
        path=/; secure; HttpOnly
      - utm=%7B%22utm_source%22%3Anull%2C%22utm_campaign%22%3Anull%7D; path=/; max-age=2592000;
        secure
      X-Request-Id:
      - b0d7c513-f760-4858-8f04-d1d82271e5f4
      X-Runtime:
      - '0.106758'
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains
      Transfer-Encoding:
      - chunked
      Via:
      - 1.1 vegur
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 31 Jul 2018 12:24:12 GMT
- request:
    method: get
    uri: https://programathor.com.br/jobs/2767-desenvolvedor-a-php-pleno-presencial
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Cowboy
      Date:
      - Tue, 31 Jul 2018 12:24:12 GMT
      Connection:
      - keep-alive
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - text/html; charset=utf-8
      Vary:
      - Accept-Encoding
      Etag:
      - W/"2252ca29d287551a525d535c4b7b5c09"
      Cache-Control:
      - max-age=0, private, must-revalidate
      Set-Cookie:
      - _ProgramaThor_session=cklNZFBYL2V4TGJCWWNrZi9lRjN3eG83YUhFSmtQVXh0b1R5enR1MWg0MWYxYTZGbTRFOTFTV21Rd2dOa2szMjlhS00vejFaVzBPL0NPbFpUUTNuQ3p0dmxjK29UZk1XdWxIaWtYNHB6eDM1Y3Q4amNadTZIM1E1TnZ0M0V6MDJzcXIzL08rK2hmT3A2bU1LaHVrTGdRPT0tLTNkNmZjU1FMN2oxVEZIcVRydTRyN1E9PQ%3D%3D--62ed3a5eb495f372e66169c0d3c80bf4ea005b94;
        path=/; secure; HttpOnly
      - utm=%7B%22utm_source%22%3Anull%2C%22utm_campaign%22%3Anull%7D; path=/; max-age=2592000;
        secure
      X-Request-Id:
      - deed338f-5040-4f55-81c1-79f2ea44826c
      X-Runtime:
      - '0.115884'
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains
      Transfer-Encoding:
      - chunked
      Via:
      - 1.1 vegur
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 31 Jul 2018 12:24:13 GMT
- request:
    method: get
    uri: https://programathor.com.br/jobs/2764-front-end-developer-angular-pleno
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Cowboy
      Date:
      - Tue, 31 Jul 2018 12:24:12 GMT
      Connection:
      - keep-alive
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - text/html; charset=utf-8
      Vary:
      - Accept-Encoding
      Etag:
      - W/"3aade229524d13e38a454b4d8efff38b"
      Cache-Control:
      - max-age=0, private, must-revalidate
      Set-Cookie:
      - _ProgramaThor_session=cVlrS1BXbXRNdFFZZ1RCeE51d3RSdHZ4dW10YitCeHRYNGFNNGdxRi8vU2J1Mk9mQmh2aVpWMWxDNk5iQTBhaWYvb0dVK3g5enNXbXlhZGN4dk9paWlqYzFWYWIxNnIrMjA2N1VCTXlsaWhjYm1WU3M0U0VMaEpMT0UvUHBwN2gvQU9ZMjlkUjc1bkJlSzRBQzEwdkJRPT0tLWdwREoralVyeFlkSlgwOG5SMzRNZUE9PQ%3D%3D--0695a90191cfab58cf536581b5c542ef44898a6e;
        path=/; secure; HttpOnly
      - utm=%7B%22utm_source%22%3Anull%2C%22utm_campaign%22%3Anull%7D; path=/; max-age=2592000;
        secure
      X-Request-Id:
      - 90a26164-fd6f-41be-a1dd-b0587c9331c9
      X-Runtime:
      - '0.082975'
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains
      Transfer-Encoding:
      - chunked
      Via:
      - 1.1 vegur
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 31 Jul 2018 12:24:14 GMT
- request:
    method: get
    uri: https://programathor.com.br/jobs/2749-desenvolvedor-a-front-end-javascript
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Cowboy
      Date:
      - Tue, 31 Jul 2018 12:24:13 GMT
      Connection:
      - keep-alive
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - text/html; charset=utf-8
      Vary:
      - Accept-Encoding
      Etag:
      - W/"74bf340fd66a76dab9ec9f3ac3d6fb4b"
      Cache-Control:
      - max-age=0, private, must-revalidate
      Set-Cookie:
      - _ProgramaThor_session=TGVqUXp5emZpUVJ6TWZscVVLQVBKZnptZGRGdDlUeUdueFBRNUkvSm9XQXlsM3h0OWE5YnJEc0ZLZXZxZmltUXVlNFhjSmVKYnN4YnFsZ3pVcjVIVE1IUDBFdW9KdnVZQlZMcFNWSk5MSkRYbHp5U0J6NWpZTXRTVUxuZm80dklGckJ6SVVoSVVBQjZ4VWVyWHBuQWFRPT0tLWI3UnNlSDNXMGxBYit3aWlQa1JzZUE9PQ%3D%3D--4f0f661d301a96043f19b632e98b19db36e26e15;
        path=/; secure; HttpOnly
      - utm=%7B%22utm_source%22%3Anull%2C%22utm_campaign%22%3Anull%7D; path=/; max-age=2592000;
        secure
      X-Request-Id:
      - 61382abb-1f93-4654-b289-023d7ab9d563
      X-Runtime:
      - '0.090420'
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains
      Transfer-Encoding:
      - chunked
      Via:
      - 1.1 vegur
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 31 Jul 2018 12:24:14 GMT
- request:
    method: get
    uri: https://programathor.com.br/jobs/2740-desenvolvedor-a-nodejs-backend-devops-pleno-senior
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Cowboy
      Date:
      - Tue, 31 Jul 2018 12:24:15 GMT
      Connection:
      - keep-alive
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - text/html; charset=utf-8
      Vary:
      - Accept-Encoding
      Etag:
      - W/"4f3cb2495c22a59a55d05519d896267d"
      Cache-Control:
      - max-age=0, private, must-revalidate
      Set-Cookie:
      - _ProgramaThor_session=VUZmZ0VEblVZU0o3QzVNZjFlU1lZMlNhdXd1ZEkyNTNSVm5tM0lBR2o1SWdFYzVlWGF2WnFiVFlvaHhXUzA5UGlBRnZtellCR09CT3lFdDVDNDFBRFltVG9YQ2szSjNGVUJtUW5QaWhLWnkxZ0xLZHZyNmk1RWtXOFFlLzJDcThyc1NqVGtWMTUxSTI3QnRiVFZLVXFnPT0tLWUwMU5tL1pKSE9XWnd1T0w0MmsxU1E9PQ%3D%3D--b915ac83a3d4e112aa758a196e1b1b3f04984b39;
        path=/; secure; HttpOnly
      - utm=%7B%22utm_source%22%3Anull%2C%22utm_campaign%22%3Anull%7D; path=/; max-age=2592000;
        secure
      X-Request-Id:
      - 04a7c7a2-21c8-4238-bfde-86933eb29d91
      X-Runtime:
      - '0.093948'
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains
      Transfer-Encoding:
      - chunked
      Via:
      - 1.1 vegur
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 31 Jul 2018 12:24:15 GMT
- request:
    method: get
    uri: https://programathor.com.br/jobs/2736-desenvolvedor-a-net
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Cowboy
      Date:
      - Tue, 31 Jul 2018 12:24:15 GMT
      Connection:
      - keep-alive
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - text/html; charset=utf-8
      Vary:
      - Accept-Encoding
      Etag:
      - W/"1c8061762e83424b2a9cf3004390df37"
      Cache-Control:
      - max-age=0, private, must-revalidate
      Set-Cookie:
      - _ProgramaThor_session=WWJ4NTFQSS8vM0orK1A1bDg3NDAvQXY1UFA2K2V4UEI4NXphTU5WZlNPb3dybjgvVXpuZ1Z1aTVuUmNYRG51d1UwV2pON0FFRkdZK0hnaEV1eVRtMGFlSzFIWkYzeS9QSXVtZUtEUVp6NUZaODhLOXFZVU9mQ1dQVEVZVXVZRlh3bTBSS1YxeFhCa01iUHd3K1djOXNRPT0tLUhZTFVwcGFTNlNyTFJ5NVdxNFZXSFE9PQ%3D%3D--fd40aff8d698a3e44e0d2889b2fef22e6c23e096;
        path=/; secure; HttpOnly
      - utm=%7B%22utm_source%22%3Anull%2C%22utm_campaign%22%3Anull%7D; path=/; max-age=2592000;
        secure
      X-Request-Id:
      - 2208d817-2981-4116-91b3-568874125afc
      X-Runtime:
      - '0.078153'
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains
      Transfer-Encoding:
      - chunked
      Via:
      - 1.1 vegur
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 31 Jul 2018 12:24:16 GMT
- request:
    method: get
    uri: https://programathor.com.br/jobs/2729-desenvolvedor-a-net
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Cowboy
      Date:
      - Tue, 31 Jul 2018 12:24:16 GMT
      Connection:
      - keep-alive
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - text/html; charset=utf-8
      Vary:
      - Accept-Encoding
      Etag:
      - W/"fc6ececedb7ac5898741416a55de3b26"
      Cache-Control:
      - max-age=0, private, must-revalidate
      Set-Cookie:
      - _ProgramaThor_session=c1VtbTQrdFZjVURwNThNeEt4RjdPVWhpTXdVaXFmZWliVm5tOVRQdTVqZlJES2VYekFKOFRVODhXK09uV3R3Y0RTVWtQVlRHV1Z4VnJCYWFXck1pOHJiRmJLUEEvM3hSck9xU0NWRFc4MlJVMEViNGRWQmdDWk43ejZGSnR4YzJFc2ttMlltcGE3c2c5RXgvZXBJMER3PT0tLXM0ZmJmZ0RkQ1RSWGVrL1hTSG9EdWc9PQ%3D%3D--acfc179753411ab382aff46007b17aec6ecf14d5;
        path=/; secure; HttpOnly
      - utm=%7B%22utm_source%22%3Anull%2C%22utm_campaign%22%3Anull%7D; path=/; max-age=2592000;
        secure
      X-Request-Id:
      - '0283d350-9e68-4fdd-bbdc-8becce90ae1b'
      X-Runtime:
      - '0.085993'
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains
      Transfer-Encoding:
      - chunked
      Via:
      - 1.1 vegur
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 31 Jul 2018 12:24:16 GMT
- request:
    method: get
    uri: https://programathor.com.br/jobs/2761-desenvolvedor-a-c-angular-js-sql
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Cowboy
      Date:
      - Tue, 31 Jul 2018 12:24:16 GMT
      Connection:
      - keep-alive
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - text/html; charset=utf-8
      Vary:
      - Accept-Encoding
      Etag:
      - W/"f6eb91ea08a6f8c5e136c3a25d765777"
      Cache-Control:
      - max-age=0, private, must-revalidate
      Set-Cookie:
      - _ProgramaThor_session=Z0UrMTFEMWx6NmMvV0pDNFphVjhldVhkQy9pMVRSSXQzODc1R09DeU1Ca1lGcDZXbXU4WnR1VDBpZ1dIWmkxMUs5SUdtdENueHNvWHkrQ3JuTER3Z25mak9jR0RXWGtMVWtQUjZLbnZPWk1rT1JUL0ZEYTBUYVdZbjJWY20yODF0QWM3RUlGZVBEOUNVODBydXdLS0VBPT0tLXdON3JRSXRYQ1BBazJXN0ZCajJYTUE9PQ%3D%3D--10dd910e1c950f8172a0285396e2d4d986d1248f;
        path=/; secure; HttpOnly
      - utm=%7B%22utm_source%22%3Anull%2C%22utm_campaign%22%3Anull%7D; path=/; max-age=2592000;
        secure
      X-Request-Id:
      - 77e3afdd-fa64-4f5d-ac5a-9c4fa6f77b82
      X-Runtime:
      - '0.093490'
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains
      Transfer-Encoding:
      - chunked
      Via:
      - 1.1 vegur
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 31 Jul 2018 12:24:17 GMT
recorded_with: VCR 4.0.0
